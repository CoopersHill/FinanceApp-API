// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using hwFinanceApp.Models;

namespace hwFinanceApp.Migrations
{
    [DbContext(typeof(FinanceContext))]
    partial class FinanceContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("hwFinanceApp.Models.BankAccount", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<double>("AccountBalance")
                        .HasColumnType("float");

                    b.Property<string>("AccountDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AccountOwnerId")
                        .HasColumnType("int");

                    b.Property<int>("AccountType")
                        .HasColumnType("int");

                    b.Property<int?>("HouseHoldID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("HouseHoldID");

                    b.ToTable("BankAccounts");
                });

            modelBuilder.Entity("hwFinanceApp.Models.Budget", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("HouseHoldId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("HouseHoldId");

                    b.ToTable("Budgets");
                });

            modelBuilder.Entity("hwFinanceApp.Models.BudgetItem", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<int>("BudgetId")
                        .HasColumnType("int");

                    b.Property<int>("CategoriesId")
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("BudgetItems");
                });

            modelBuilder.Entity("hwFinanceApp.Models.Category", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("HouseholdID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("HouseholdID");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("hwFinanceApp.Models.HouseHold", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("HeadOfHouseholdID")
                        .HasColumnType("int");

                    b.Property<string>("HouseholdName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Households");
                });

            modelBuilder.Entity("hwFinanceApp.Models.Transaction", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<int>("BankAccountID")
                        .HasColumnType("int");

                    b.Property<int>("CategoryID")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnteredByID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EnteredBy_ID")
                        .HasColumnType("int");

                    b.Property<bool>("RecStatus")
                        .HasColumnType("bit");

                    b.Property<double>("ReconciledAmount")
                        .HasColumnType("float");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("BankAccountID");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("hwFinanceApp.Models.BankAccount", b =>
                {
                    b.HasOne("hwFinanceApp.Models.HouseHold", null)
                        .WithMany("houseHoldAccounts")
                        .HasForeignKey("HouseHoldID");
                });

            modelBuilder.Entity("hwFinanceApp.Models.Budget", b =>
                {
                    b.HasOne("hwFinanceApp.Models.HouseHold", "Household")
                        .WithMany("Budgets")
                        .HasForeignKey("HouseHoldId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Household");
                });

            modelBuilder.Entity("hwFinanceApp.Models.Category", b =>
                {
                    b.HasOne("hwFinanceApp.Models.HouseHold", null)
                        .WithMany("Categories")
                        .HasForeignKey("HouseholdID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("hwFinanceApp.Models.Transaction", b =>
                {
                    b.HasOne("hwFinanceApp.Models.BankAccount", null)
                        .WithMany("transactions")
                        .HasForeignKey("BankAccountID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("hwFinanceApp.Models.BankAccount", b =>
                {
                    b.Navigation("transactions");
                });

            modelBuilder.Entity("hwFinanceApp.Models.HouseHold", b =>
                {
                    b.Navigation("Budgets");

                    b.Navigation("Categories");

                    b.Navigation("houseHoldAccounts");
                });
#pragma warning restore 612, 618
        }
    }
}
